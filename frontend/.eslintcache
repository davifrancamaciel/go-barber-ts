[{"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\index.tsx":"1","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\App.tsx":"2","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\styles\\global.ts":"3","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\routes\\index.tsx":"4","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\index.tsx":"5","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\routes\\Routes.tsx":"6","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\auth.tsx":"7","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\toast.tsx":"8","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\services\\api.ts":"9","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Dashboard\\index.tsx":"10","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignUp\\index.tsx":"11","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignIn\\index.tsx":"12","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignUp\\styles.ts":"13","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignIn\\styles.ts":"14","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\index.tsx":"16","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\styles.ts":"17","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Button\\index.tsx":"18","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Input\\index.tsx":"19","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Input\\styles.ts":"20","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Button\\styles.tsx":"21","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\Toast\\index.tsx":"22","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\Toast\\styles.ts":"23","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Tooltip\\index.tsx":"24","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Tooltip\\styles.ts":"25","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ForgotPassword\\index.tsx":"26","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ForgotPassword\\styles.ts":"27","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ResetPassword\\index.tsx":"28","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ResetPassword\\styles.ts":"29","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Dashboard\\styles.js":"30","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Profile\\index.tsx":"31","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Profile\\styles.ts":"32"},{"size":197,"mtime":1612347051947,"results":"33","hashOfConfig":"34"},{"size":383,"mtime":1615372132662,"results":"35","hashOfConfig":"34"},{"size":512,"mtime":1612431980092,"results":"36","hashOfConfig":"34"},{"size":829,"mtime":1626259284226,"results":"37","hashOfConfig":"34"},{"size":294,"mtime":1612644673834,"results":"38","hashOfConfig":"34"},{"size":802,"mtime":1615507249869,"results":"39","hashOfConfig":"34"},{"size":2047,"mtime":1626391118437,"results":"40","hashOfConfig":"34"},{"size":1440,"mtime":1612777859939,"results":"41","hashOfConfig":"34"},{"size":135,"mtime":1626996546390,"results":"42","hashOfConfig":"34"},{"size":6759,"mtime":1626259059448,"results":"43","hashOfConfig":"34"},{"size":2725,"mtime":1615459684358,"results":"44","hashOfConfig":"34"},{"size":2634,"mtime":1625864342166,"results":"45","hashOfConfig":"34"},{"size":1484,"mtime":1625864672775,"results":"46","hashOfConfig":"34"},{"size":1484,"mtime":1625864672776,"results":"47","hashOfConfig":"34"},{"size":358,"mtime":1615458993219,"results":"48","hashOfConfig":"34"},{"size":784,"mtime":1612782784366,"results":"49","hashOfConfig":"34"},{"size":162,"mtime":1612779028514,"results":"50","hashOfConfig":"34"},{"size":359,"mtime":1625876666936,"results":"51","hashOfConfig":"34"},{"size":1657,"mtime":1626344933537,"results":"52","hashOfConfig":"34"},{"size":1099,"mtime":1612622905499,"results":"53","hashOfConfig":"34"},{"size":381,"mtime":1612521088887,"results":"54","hashOfConfig":"34"},{"size":1175,"mtime":1625876945569,"results":"55","hashOfConfig":"34"},{"size":1194,"mtime":1625876945569,"results":"56","hashOfConfig":"34"},{"size":354,"mtime":1612621212513,"results":"57","hashOfConfig":"34"},{"size":719,"mtime":1612622748520,"results":"58","hashOfConfig":"34"},{"size":2642,"mtime":1625876477702,"results":"59","hashOfConfig":"34"},{"size":1484,"mtime":1625864672776,"results":"60","hashOfConfig":"34"},{"size":3124,"mtime":1625878890055,"results":"61","hashOfConfig":"34"},{"size":1484,"mtime":1625864672776,"results":"62","hashOfConfig":"34"},{"size":4621,"mtime":1626259192232,"results":"63","hashOfConfig":"34"},{"size":4887,"mtime":1626396491107,"results":"64","hashOfConfig":"34"},{"size":1543,"mtime":1626389576340,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"a39pc5",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\index.tsx",[],["140","141"],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\App.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\styles\\global.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\routes\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\routes\\Routes.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\auth.tsx",["142"],"import React, { createContext, useCallback, useState, useContext } from 'react'\nimport api from '../services/api'\n\ninterface User {\n  id: string\n  avatar_url: string\n  name: string\n  email: string\n}\ninterface AuthState {\n  token: string\n  user: User\n}\n\ninterface SignInCredentials {\n  email: string\n  password: string\n}\n\ninterface AuthContextData {\n  user: User\n  signIn(credentials: SignInCredentials): Promise<void>\n  signOut(): void\n  updateUser(user: User): void\n}\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token')\n    const user = localStorage.getItem('@GoBarber:user')\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`\n\n      return { token, user: JSON.parse(user) }\n    }\n    return {} as AuthState\n  })\n\n  const signIn = useCallback(async ({ email, password }): Promise<void> => {\n    const response = await api.post('sessions', { email, password })\n\n    const { token, user } = response.data\n\n    localStorage.setItem('@GoBarber:token', token)\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user))\n\n    setData({ token, user })\n  }, [])\n\n  const signOut = useCallback(async (): Promise<void> => {\n    localStorage.removeItem('@GoBarber:token')\n    localStorage.removeItem('@GoBarber:user')\n\n    setData({} as AuthState)\n  }, [])\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@GoBarber:user', JSON.stringify(user))\n      setData({ token: data.token, user })\n    },\n    [setData]\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nfunction useAuth (): AuthContextData {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport { AuthProvider, useAuth }\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\hooks\\toast.tsx",["143"],"import React, { createContext, useCallback, useState, useContext } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport ToastContainer from \"../components/ToastContainer\";\n\ninterface ToastContextData {\n  addToast(mesage: Omit<ToastMessage, \"id\">): void;\n  removeToast(id: string): void;\n}\n\nexport interface ToastMessage {\n  id: string;\n  type?: \"success\" | \"error\" | \"info\";\n  title: string;\n  description?: string;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ title, type, description }: Omit<ToastMessage, \"id\">) => {\n      const id = uuid();\n      const toast = {\n        id,\n        title,\n        type,\n        description,\n      };\n      setMessages((oldMessages) => [...oldMessages, toast]);\n    },\n    []\n  );\n  const removeToast = useCallback((id: string) => {\n    setMessages((state) => state.filter((m) => m.id != id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error(\"useToast must be used within an ToastProvider\");\n  }\n  return context;\n}\n\nexport { useToast, ToastProvider };\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\services\\api.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Dashboard\\index.tsx",["144"],"import React, { useCallback, useState, useEffect, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FiClock, FiPower } from 'react-icons/fi'\nimport DayPicker, { DayModifiers } from 'react-day-picker'\nimport 'react-day-picker/lib/style.css'\nimport { isToday, format, parseISO, isAfter } from 'date-fns'\nimport ptBR from 'date-fns/esm/locale/pt-BR'\n\nimport logo from '../../assets/logo.svg'\nimport { useAuth } from '../../hooks/auth'\n\nimport api from '../../services/api'\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Shedule,\n  Calendar,\n  NextAppointment,\n  Section,\n  Appointment\n} from './styles'\n\ninterface MonthAvailabityItem {\n  day: number\n  available: boolean\n}\n\ninterface Appointment {\n  id: string\n  date: string\n  hourFormatted: string\n  user: {\n    name: string\n    avatar_url: string\n  }\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth()\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [currentMonth, setCurrentMonth] = useState(new Date())\n  const [monthAvailability, setmonthAvailability] = useState<\n    MonthAvailabityItem[]\n  >([])\n  const [appointments, setAppointments] = useState<Appointment[]>([])\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1\n        }\n      })\n      .then(resp => setmonthAvailability(resp.data))\n  }, [currentMonth, user.id])\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>(`/appointments/me`, {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate()\n        }\n      })\n      .then(resp => {\n        const appoitmentsFormatted = resp.data.map(appointment => ({\n          ...appointment,\n          hourFormatted: format(parseISO(appointment.date), 'HH:mm')\n        }))\n        setAppointments(appoitmentsFormatted)\n      })\n  }, [selectedDate])\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day)\n    }\n  }, [])\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month)\n  }, [])\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear()\n        const month = currentMonth.getMonth()\n\n        return new Date(year, month, monthDay.day)\n      })\n    return dates\n  }, [currentMonth, monthAvailability])\n\n  const selecttedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", { locale: ptBR })\n  }, [selectedDate])\n\n  const selecttedWeekDayAsText = useMemo(() => {\n    return format(selectedDate, 'cccc', { locale: ptBR })\n  }, [selectedDate])\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(a => {\n      return parseISO(a.date).getHours() < 12\n    })\n  }, [appointments])\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(a => {\n      return parseISO(a.date).getHours() >= 12\n    })\n  }, [appointments])\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find(a => isAfter(parseISO(a.date), new Date()))\n  }, [appointments])\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logo} alt='GoBarber' />\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to={'/profile'}>\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n          <button type='button' onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n      <Content>\n        <Shedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selecttedDateAsText}</span>\n            <span>{selecttedWeekDayAsText}</span>\n          </p>\n          {isToday(selectedDate) && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment?.user.avatar_url}\n                  alt={nextAppointment?.user.name}\n                />\n                <strong>{nextAppointment?.user.name}</strong>\n                <span>\n                  <FiClock /> {nextAppointment?.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map(a => (\n              <Appointment key={a.id}>\n                <span>\n                  <FiClock /> {a.hourFormatted}\n                </span>\n                <div>\n                  <img src={a.user.avatar_url} alt={a.user.name} />\n                  <strong>{a.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map(a => (\n              <Appointment key={a.id}>\n                <span>\n                  <FiClock /> {a.hourFormatted}\n                </span>\n                <div>\n                  <img src={a.user.avatar_url} alt={a.user.name} />\n                  <strong>{a.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Shedule>\n        <Calendar>\n          <DayPicker\n            selectedDays={selectedDate}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] }\n            }}\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro'\n            ]}\n            onDayClick={handleDateChange}\n            onMonthChange={handleMonthChange}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Dashboard\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignIn\\index.tsx",["145"],"import React, { useCallback, useRef } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\n\nimport { Form } from \"@unform/web\";\nimport * as Yup from \"yup\";\n\nimport { useAuth } from \"../../hooks/auth\";\nimport { useToast } from \"../../hooks/toast\";\n\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\n\nimport logo from \"../../assets/logo.svg\";\n\nimport { Container, Content, Background, AnimationContainer } from \"./styles\";\n\ninterface SignOnFomData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignOnFomData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email(\"Digite um email válido\")\n            .required(\"E-mail obrigatório\"),\n          password: Yup.string().required(\"A senha é obrigatória\"),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push(\"/dashboard\");\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error);\n          formRef.current?.setErrors(errors);\n        }\n        addToast({\n          type: \"error\",\n          title: \"Erro na autenticação\",\n          description: \"Ocorreu um  erro ao fazer login\",\n        });\n      }\n    },\n    [signIn, addToast]\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt=\"GoBarber\" />\n          <Form onSubmit={handleSubmit} initialData={{}} ref={formRef}>\n            <h1>Faça seu logon</h1>\n            <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n            <Input\n              icon={FiLock}\n              name=\"password\"\n              placeholder=\"Senha\"\n              type=\"password\"\n            />\n            <Button>Entrar</Button>\n            <Link to={\"/forgot-password\"}>Esqueci minha senha</Link>\n          </Form>\n          <Link to={\"/signup\"}>\n            <FiLogIn size={20} /> Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Button\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Input\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Input\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Button\\styles.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\components\\Tooltip\\styles.ts",[],["146","147"],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ForgotPassword\\index.tsx",["148","149","150"],"import React, { useCallback, useRef, useState } from 'react'\nimport { FormHandles } from '@unform/core'\nimport { Link, useHistory } from 'react-router-dom'\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi'\n\nimport { Form } from '@unform/web'\nimport * as Yup from 'yup'\n\nimport { useToast } from '../../hooks/toast'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\n\nimport Button from '../../components/Button'\nimport Input from '../../components/Input'\n\nimport logo from '../../assets/logo.svg'\n\nimport { Container, Content, Background, AnimationContainer } from './styles'\nimport api from '../../services/api'\n\ninterface ForgotPasswordFomData {\n  email: string\n}\n\nconst ForgotPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFomData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Digite um email válido')\n            .required('E-mail obrigatório')\n        })\n\n        await schema.validate(data, { abortEarly: false })\n        setLoading(true)\n        await api.post('/password/forgot', data)\n\n        addToast({\n          type: 'success',\n          title: 'Email de recuperação enviado',\n          description: 'Verifique sua caixa de email para redefinir sua senha'\n        })\n\n        history.push('/dashboard')\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error)\n          formRef.current?.setErrors(errors)\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description: 'Ocorreu um  erro ao fazer a recuperação de senha'\n        })\n      } finally {\n        setLoading(false)\n      }\n    },\n    [addToast]\n  )\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt='GoBarber' />\n          <Form onSubmit={handleSubmit} initialData={{}} ref={formRef}>\n            <h1>Recuperar sua senha</h1>\n            <Input icon={FiMail} name='email' placeholder='E-mail' />\n            <Button loading={loading}>Recuperar</Button>\n            <Link to={'/'}>Voltar ao login</Link>\n          </Form>\n          <Link to={'/signup'}>\n            <FiLogIn size={20} /> Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  )\n}\n\nexport default ForgotPassword\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ResetPassword\\index.tsx",["151"],"import React, { useCallback, useRef, useState } from 'react'\nimport { FormHandles } from '@unform/core'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi'\n\nimport { Form } from '@unform/web'\nimport * as Yup from 'yup'\n\nimport { useToast } from '../../hooks/toast'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\n\nimport Button from '../../components/Button'\nimport Input from '../../components/Input'\n\nimport logo from '../../assets/logo.svg'\n\nimport { Container, Content, Background, AnimationContainer } from './styles'\nimport api from '../../services/api'\n\ninterface ResetPasswordFomData {\n  password: string\n  password_confirmation: string\n}\n\nconst ResetPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n  const location = useLocation()\n  console.log(location)\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFomData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          password: Yup.string().min(6, 'No mínimo 6 dígitos'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'As senhas estão diferentes'\n          )\n        })\n\n        await schema.validate(data, { abortEarly: false })\n        setLoading(true)\n        const token = location.search.replace('?token=', '')\n\n        if (!token) {\n          throw new Error()\n        }\n        await api.post('/password/reset', { ...data, token })\n\n        addToast({\n          type: 'success',\n          title: 'Senha alterda com sucesso'\n        })\n\n        history.push('/')\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error)\n          formRef.current?.setErrors(errors)\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro ao resetar de senha',\n          description: 'Ocorreu um  erro ao fazer a resetar de senha'\n        })\n      } finally {\n        setLoading(false)\n      }\n    },\n    [addToast, history, location.search]\n  )\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt='GoBarber' />\n          <Form onSubmit={handleSubmit} initialData={{}} ref={formRef}>\n            <h1>Redefinição de senha</h1>\n            <Input\n              icon={FiLock}\n              name='password'\n              placeholder='Nova senha'\n              type='password'\n            />\n            <Input\n              icon={FiLock}\n              type='password'\n              placeholder='Confirme a nova senha'\n              name='password_confirmation'\n            />\n            <Button loading={loading}>Redefinir</Button>\n          </Form>\n          <Link to={'/signin'}>\n            <FiLogIn size={20} /> Voltar ao login\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  )\n}\n\nexport default ResetPassword\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Dashboard\\styles.js",[],["152","153"],"C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Profile\\index.tsx",["154","155"],"import React, { ChangeEvent, FormEvent, useCallback, useRef } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { FormHandles } from '@unform/core'\nimport { FiMail, FiLock, FiUser, FiCamera, FiArrowLeft } from 'react-icons/fi'\nimport { Form } from '@unform/web'\nimport * as Yup from 'yup'\nimport getValidationErrors from '../../utils/getValidationErrors'\n\nimport Button from '../../components/Button'\nimport Input from '../../components/Input'\nimport api from '../../services/api'\nimport { useToast } from '../../hooks/toast'\n\nimport { Container, Content, AvatarInput } from './styles'\nimport { useAuth } from '../../hooks/auth'\n\ninterface SignInFormData {\n  name: string\n  email: string\n  old_password: string\n  password: string\n  password_confirmation: string\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const { user, updateUser } = useAuth()\n\n  const history = useHistory()\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      console.log(data)\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite um email válido')\n            .required('E-mail obrigatório'),\n          old_password: Yup.string(),\n          password: Yup.string().when('old_password', {\n            is: (val: string) => !!val.length,\n            then: Yup.string().required('Campo obrigatório'),\n            otherwise: Yup.string()\n          }),\n          password_confirmation: Yup.string()\n            .when('old_password', {\n              is: (val: string) => !!val.length,\n              then: Yup.string().required('Campo obrigatório'),\n              otherwise: Yup.string()\n            })\n            .oneOf([Yup.ref('password'), null], 'As senhas estão diferentes')\n        })\n\n        await schema.validate(data, { abortEarly: false })\n\n        const {\n          name,\n          email,\n          old_password,\n          password,\n          password_confirmation\n        } = data\n\n        const formData = Object.assign(\n          { name, email },\n          old_password\n            ? { old_password, password, password_confirmation }\n            : {}\n        )\n\n        const response = await api.put('/profile', formData)\n        updateUser(response.data)\n        addToast({\n          type: 'success',\n          title: 'Perfil atualizado!',\n          description: 'Suas informações do perfil fora atualizadas com sicesso'\n        })\n\n        history.push('/dashboard')\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error)\n          formRef.current?.setErrors(errors)\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na atialização',\n          description: 'Ocorreu um erro ao atualizar'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  const handleAvatarChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const formData = new FormData()\n        formData.append('avatar', e.target.files[0])\n\n        api.patch('/users/avatar', formData).then(response => {\n          updateUser(response.data)\n          addToast({\n            type: 'success',\n            title: 'Imagen salva com sucesso'\n          })\n        })\n      }\n    },\n    [addToast, updateUser]\n  )\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to={'/dashboard'}>\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n      <Content>\n        <Form\n          onSubmit={handleSubmit}\n          initialData={{ name: user.name, email: user.email }}\n          ref={formRef}\n        >\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n            <label htmlFor='avatar'>\n              <FiCamera />\n              <input type='file' id='avatar' onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n          <h1>Meu perfil</h1>\n          <Input icon={FiUser} name='name' placeholder='Nome' />\n          <Input icon={FiMail} name='email' placeholder='E-mail' />\n\n          <Input\n            containerStyle={{ marginTop: '24px' }}\n            icon={FiLock}\n            name='old_password'\n            placeholder='Senha'\n            type='password'\n          />\n          <Input\n            icon={FiLock}\n            name='password'\n            placeholder='Nova senha'\n            type='password'\n          />\n          <Input\n            icon={FiLock}\n            name='password_confirmation'\n            placeholder='Confirme a nova senha'\n            type='password'\n          />\n\n          <Button>Salvar</Button>\n        </Form>\n      </Content>\n    </Container>\n  )\n}\n\nexport default SignUp\n","C:\\Users\\home\\Documents\\DAVI\\PROJETOS\\go-barber-ts\\frontend\\src\\pages\\Profile\\styles.ts",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":63,"column":5,"nodeType":"162","endLine":63,"endColumn":14,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":36,"column":53,"nodeType":"166","messageId":"167","endLine":36,"endColumn":55},{"ruleId":"168","severity":1,"message":"169","line":31,"column":11,"nodeType":"170","messageId":"171","endLine":31,"endColumn":22},{"ruleId":"160","severity":1,"message":"172","line":63,"column":5,"nodeType":"162","endLine":63,"endColumn":23,"suggestions":"173"},{"ruleId":"156","replacedBy":"174"},{"ruleId":"158","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":4,"column":27,"nodeType":"170","messageId":"178","endLine":4,"endColumn":33},{"ruleId":"176","severity":1,"message":"179","line":29,"column":10,"nodeType":"170","messageId":"178","endLine":29,"endColumn":17},{"ruleId":"160","severity":1,"message":"172","line":67,"column":5,"nodeType":"162","endLine":67,"endColumn":15,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"181","line":4,"column":19,"nodeType":"170","messageId":"178","endLine":4,"endColumn":25},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"176","severity":1,"message":"182","line":1,"column":30,"nodeType":"170","messageId":"178","endLine":1,"endColumn":39},{"ruleId":"160","severity":1,"message":"183","line":95,"column":5,"nodeType":"162","endLine":95,"endColumn":24,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'data.token'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'data.token'.","ArrayExpression",["187"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'Appointment' is already defined.","Identifier","redeclared","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["188"],["185"],["186"],"@typescript-eslint/no-unused-vars","'FiLock' is defined but never used.","unusedVar","'loading' is assigned a value but never used.",["189"],"'FiMail' is defined but never used.","'FormEvent' is defined but never used.","React Hook useCallback has a missing dependency: 'updateUser'. Either include it or remove the dependency array.",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [data.token]",{"range":"199","text":"200"},"Update the dependencies array to be: [signIn, history, addToast]",{"range":"201","text":"202"},"Update the dependencies array to be: [addToast, history]",{"range":"203","text":"204"},"Update the dependencies array to be: [addToast, history, updateUser]",{"range":"205","text":"206"},[1651,1660],"[data.token]",[1816,1834],"[signIn, history, addToast]",[1976,1986],"[addToast, history]",[2979,2998],"[addToast, history, updateUser]"]